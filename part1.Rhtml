<!--begin.rcode init,echo=FALSE,result="hide", cache=FALSE
# build("./part1/part1.Rhtml", "./templatr/inst/templates/pres1/","index.html",title="Part 1")
knitr::opts_chunk$set(comment=NA, prompt=TRUE, dev="CairoPNG")
knitr::opts_knit$set(root.dir=wd)
setwd(wd)
knitr::opts_chunk$set(fig.full=FALSE)
op = options()$continue
options(continue=" ")
# grDevices::X11.options(type='cairo')
palette("default")
set.seed(310366)
end.rcode-->

<div class="slide" id="title">
<h1>Maps in R</h1>
<h2>So Many Ways To Do It</h2>
<h3>Barry Rowlingson</h3>
<h4>Lancaster University</h4>
<h5>Lancaster Medical School</h5>
<p style="font-size: 40%">[next slide=right arrow, prev slide=left arrow, or click slide counter top-right for index]</p>
</div>

<div class="slide" id="mapfundamentals">
<h1>Map Fundamentals</h1>

<h2>Map Location</h2>
  <ul>
  <li>Extent</li>
  <li>Projection</li>
  <li>Layer Order</li>
  <li>Layer Composition</li>
  </ul>

<h2>Map Data and Styling</h2>
<ul>
<li>Points
  <ul>
  <li>Marker</li><li>Size</li><li>Colour</li>
  </ul>
</li>
<li>Lines
  <ul>
  <li>Style</li><li>Width</li><li>Colour</li><li>Ending</li>
  </ul>
</li>
<li>Polygons
   <ul>
   <li>Fill</li><li>Outline</li><li>Style</li>
   </ul>
</li>
<li>Grids
   <ul>
   <li>Band Selection</li><li>Colour Mapping</li>
   </ul>  
</li>
<li>Labels</li>
</ul>

<h2>Map Decoration</h2>
<ul>
<li>Annotations</li>
<li>Legends</li>
<li>Scale Bars</li>
<li>North Arrows</li>
</ul>


</div>

<div class="slide" id="gfxoutline">
<h1>R's Graphics</h1>
<ul>
<li>R calls low-level graphics primitive functions</li>
<ul>
<li>Line</li>
<li>Point</li>
<li>Circle</li>
<li>etc</li>
</ul>
<li>drawing is done on a graphics device</li>
<ul>
<li>On-screen window</li>
<li>PDF File</li>
<li>Image file (jpeg, png)</li>
</ul>
</ul>
</div>

<div class="slide" id="gfxcoords">
<h1>Graphics Coordinate Systems</h1>
<h2>Various systems...</h2>
<div class="center rimage">
<img src="./graphics/coords1.svg"/>
</div>

<h2>What are they?</h2>
<ul>
<li><span style="color: red">Device Coordinates</span> (pixels, inches, cm)</li>
<li><span style="color: black">Normalised Device Coordinates</li>
<li><span style="color: green">Normalised Plot Coordinates</li>
<li>"User" Coordinates</li>
</ul>

<h2>Gets more complicated</h2>
<div class="center rimage">
<img src="./graphics/plot4.png" />
</div>

<h2><code>help(grconvertX)</code> lists...</h2>
<dl>
<dt><code>user</code></dt><dd>user coordinates.</dd>
<dt><code>inches</code></dt><dd>inches.</dd>
<dt><code>device</code></dt><dd>the device coordinate system.</dd>
<dt><code>ndc</code></dt><dd>normalized device coordinates.</dd>
<dt><code>nfc</code></dt><dd>normalized figure coordinates.</dd>
<dt><code>npc</code></dt><dd>normalized plot coordinates.</dd>
<dt><code>nic</code></dt><dd>normalized inner region coordinates.  (The ‘inner region’
    is that inside the outer margins.)</dd>
</dl>

</div>

<div class="slide" id="basegraphics">
<h1>Base Graphics</h1>
<h2>The original plotting system</h2>
<ul>
<li><code>plot(x,y)</code></li>
<li><code>hist(runif(100))</code></li>
<li><code>image(m)</code></li>
</ul>

<h2>Piece of Paper Paradigm</h2>
<ul>
<li>Functions make marks on device</li>
<li>Can either add to existing marks or start a new page</li>
<li>Page can be divided up into figures</li>
<li>Each figure typically has one plot</li>
<li>Use the <code>user</code> coordinate system</li>
</ul>

<h2>Base Basics</h2>
<!--begin.rcode
plot(rnorm(1000), rnorm(1000))
abline(h=2, col="#FF000080", lwd=25)
end.rcode-->

<!--begin.rcode
par(mfrow=c(2,1))
hist(rnorm(1000))
abline(v=2)
m = matrix(runif(24),8, 3)
image(x=-3:4, y=4:6, z=m)
text(-1.5,5.5,"Top Left",cex=4)
end.rcode-->

</div>

<div class="slide" id="gridgraphics">
<h1>Grid Graphics</h1>
</div>

<div class="slide" id="basegfxmaps">
<h1>Mapping with Base Graphics</h1>
<h2>Read some sample data</h2>
<!--begin.rcode crimes1
crime = read.csv("./data/2016-03-cumbria-street.csv")
names(crime)
head(crime)
end.rcode-->

<h2>Plotting</h2>
<!--begin.rcode map1,fig.full=TRUE
plot(crime$Longitude, crime$Latitude)
end.rcode-->

<p>Fix the aspect ratio...</p>

<!--begin.rcode map2,fig.full=TRUE
plot(crime$Longitude, crime$Latitude, asp=1)
end.rcode-->

<p>Or better</p>

<!--begin.rcode map3,fig.full=TRUE
asp = 1/cos((pi/180)*mean(range(crime$Latitude,na.rm=TRUE)))
plot(crime$Longitude, crime$Latitude, asp=asp)
end.rcode-->

<p>Control styling directly with extra parameters...</p>
<!--begin.rcode fig.full=TRUE
plot(crime$Longitude, crime$Latitude,
   asp=1.726,
   pch=19,
   cex=1,
   axes=FALSE, xlab="", ylab="")
points(crime$Longitude[crime$Crime.type=="Robbery"], 
       crime$Latitude[crime$Crime.type=="Robbery"],
       col="red",pch=17)
end.rcode-->

</div>

<div class="slide" id="basewsp">
<h1>Base Graphics with SP objects</h1>
<p>
We should really work with <code>sp</code> class objects</p>

<!--begin.rcode fig.full=TRUE
crimeSP = subset(crime, !is.na(Longitude) & !is.na(Latitude))
coordinates(crimeSP) = ~Longitude + Latitude
plot(crimeSP)
end.rcode-->

<p>Should set the projection...</p>

<!--begin.rcode fig.full=TRUE
projection(crimeSP)="+init=epsg:4326"
plot(crimeSP)
end.rcode-->

<p>Same options for controlling style...</p>

<!--begin.rcode fig.full=TRUE
plot(crimeSP)
points(crimeSP[crimeSP$Crime.type=="Robbery",],
       col="red",
       pch=17)
legend("topleft", 
     legend=c("Robbery","Other Crime"),
     col=c("red","black"),
     pch=c(17,3),
     pt.cex=2)
title("Robbery")
end.rcode-->

<h2>Constructing look-up tables</h2>
<!--begin.rcode fig.full=TRUE
roads = shapefile("./data/mainroads.shp")
table(roads$type)
lut = data.frame(
   row.names=names(table(roads$type)),
   colour = c("blue","blue","red","red",
              "grey50","green","green",
              "yellow","yellow","red","red"),
   width = c(3,3,3,3,1,2,2,1,1,3,3),
   stringsAsFactors=FALSE
)
head(lut)
plot(roads, col=lut[roads$type,"colour"], lwd=lut[roads$type,"width"])
end.rcode-->

<h2>Controlling Plot Order</h2>
<!--begin.rcode fig.full=TRUE
lut$order = c(11,10,7,6,1,5,4,3,2,9,8)
plot(SpatialPoints(
       as(extent(roads),
       "SpatialPoints"),
       proj4string=CRS(projection(roads))),
     col=NA)
lut = lut[order(lut$order),]
for(layer in 1:nrow(lut)){
 road_type = row.names(lut)[layer]
 lines(roads[roads$type==road_type,], 
       col=lut[layer,"colour"], 
       lwd=lut[layer,"width"])
}
end.rcode-->

<h2>Alternatively, order the spatial data...</h2>
<!--begin.rcode fig.full=TRUE
roads$order = lut[roads$type,"order"]
rorder = roads[order(roads$order),]
plot(rorder, col=lut[rorder$type,"colour"], lwd=lut[rorder$type,"width"])
end.rcode-->
</div>

<div class="slide" id="baseprojection">
<h1>Projections</h1>
<h2>Have to be done by hand</h2>
<!--begin.rcode
admin = shapefile("./data/cumbriaLSOA.shp")
extent(admin)
adminLL = spTransform(admin,"+init=epsg:4326")
extent(adminLL)
cumbriaLL = shapefile("./data/cumbria.shp")
end.rcode-->
<h2>Now we can overlay</h2>
<!--begin.rcode fig.full=TRUE
plot(adminLL, col="#ffeecc", border="grey50")
plot(cumbriaLL, add=TRUE, lwd=2)
lines(roads)
points(crimeSP)
end.rcode-->
</div>

<div class="slide" id="basebasemaps">
<h1>Basemaps</h1>
<h2>Open Street Map Package</h2>

<ul>
<li>Gets map tiles from online sources using <code>openmap()</code> function</li>
<li>Use <code>+init=epsg:4326</code> (lat-long) for extent</li>
<li>Uses <code>+init=epsg:3857</code> projection</li>
<li>Put base graphics over the top</li>
</ul>

<!--begin.rcode fig.full=TRUE
library(OpenStreetMap)
wm = list(x=c(-3.08, -2.82), y=c(54.50, 54.32))
wmap = openmap(c(wm$y[1],wm$x[1]),c(wm$y[2],wm$x[2]), type="osm")
plot(wmap)
plot(spTransform(crimeSP,"+init=epsg:3857"), 
     pch=19,
     col=1+(crimeSP$Crime.type=="Anti-social behaviour"),
     add=TRUE)
legend("top", 
     legend=c("ASBOs","Other Crime"),
     col=c("red","black"),
     pch=c(19),
     pt.cex=2,
     bg="white")
end.rcode-->
</div>

<div class="slide" id="baseraster">
<h1>Plotting Rasters</h1>

<h2>Single Band</h2>
<ul>
<li>Use <code>raster</code> package objects</li>
<li>Use <code>plot</code></li>
<li>Control colour with a palette</li>
<li>Fix ends with <code>zlim</code></li>
<li>Overlay base graphics</li>
<li>Precise colour control is tricky</li>
</ul>

<!--begin.rcode fig.full=TRUE
require(RColorBrewer)
dem = raster("./data/cumbriaDem.tif")
plot(dem)
plot(dem,zlim=c(0,1200))
plot(dem,col=rainbow(10))
plot(dem,col=gray(seq(1,0,len=10)))
plot(rorder,col=lut[rorder$type,"colour"],lwd=1,add=TRUE)
end.rcode-->

<h2>Categorical Rasters</h2>

<!--begin.rcode fig.full=TRUE
lu = raster("./data/cumbriaLandUse.tif")
lu@legend@colortable[1]=NA

cumbriaP = spTransform(cumbriaLL,projection(lu))
plot(cumbriaP)
plot(lu, add=TRUE)
plot(cumbriaP, add=TRUE)

codes =read.csv("./data/lucodes.csv",as.is=TRUE)
head(codes[,c("GRID_CODE","LABEL3","colour")])

row.names(codes)=codes$GRID_CODE # for lookup
topUsage = codes[names(sort(table(lu[]),dec=TRUE))[1:10],] # get top ten most common categories
topUsage = topUsage[!topUsage$LABEL1=="Missing",] # remove missing
legend("topleft", 
    legend=topUsage$LABEL3, 
    col=topUsage$colour, 
    pch=15, pt.cex=1, bg="#FFFFFF80",
    title="Top Land Cover by Area")
end.rcode-->


</div>

<div class="slide" id="mappackages">
<h1>Mapping Packages</h1>
<h2><code>map</code></h2>

<h2><code>rworldmap</code></h2>

</div>

<div class="slide" id="gridgfxmaps">
<h1>Mapping with Grid Graphics</h1>

</div>

<div class="slide" id="ggplot">
<h1>Using <code>ggplot</code></h1>
</div>

<div class="slide" id="threed">
<h1>3D Plots</h1>
</div>



<div class="slide" id="webmaps">
<h1>Interactive Web Maps</h1>
</div>

<div class="slide" id="withqgis">
<h1>Working with QGIS</h1>
</div>

<div class="slide" id="moretests">
<h1>Testing</h1>
<div class="left">
<ul>
<li>Bullet points</li>
<li>Bullet points</li>
<li>Bullet points</li>
</ul>
</div>
<div class="right">
<pre>
a chunk of unformatted text here
a chunk of unformatted text here
a chunk of unformatted text here
a chunk of unformatted text here
a chunk of unformatted text here
a chunk of unformatted text here
</pre>
</div>
<div style="clear:both"></div>
<ul>
<li>This is anotehr list..</li>
</ul>
<div class="left">
<ul>
<li>we use some code to do something</li>
<li>we use some code to do something</li>
<li>we use some code to do something</li>
</ul>
</div>
<div class="right">
<!--begin.rcode 
z = runif(100)
mean(z)
median(z)
end.rcode-->
</div>
</div>

<div class="slide" id="plot1">
<h1>LR test</h1>
<div class="left">
<ul>
<li>A list</ul>
</ul>
</div>
<div class="right">
<!--begin.rcode 
print(getwd())
dem = raster("./data/cumbriaDem.tif")
plot(dem)
end.rcode-->
</div>
</div>

<div class="slide" id="maptest">
<h1>This is a header 1</h1>
<h2>This is a header 1</h2>
<h3>This is a header 1</h3>
<h4>This is a header 1</h4>

<p>This is some text in a paragraph.</p>

<ul>
<li>list item one outside a paragraph</li>
<li>list item two</li>
</ul>

<p>
<ul>
<li>list item one <em>inside</em> a paragraph</li>
<li>list item two</li>
</ul>
</p>

<pre>
some preformatted text
</pre>



<!--begin.rcode
plot(cumbriaLL)
axis(1)
axis(2)
end.rcode-->

<!--begin.rcode
cumbriaP = spTransform(cumbriaLL,projection(dem))
plot(dem)
lines(cumbriaP)
end.rcode-->
</div>

<div class="slide" id="lutest">
<h1>Land Use</h1>
<!--begin.rcode lu, fig.keep="all"
lu = raster("./data/cumbriaLandUse.tif")
#plot(spTransform(cumbriaLL, projection(lu)))
plot(lu)
plot(dem)
end.rcode-->
</div>